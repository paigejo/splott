% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/splott.R
\name{getLogScaleTicks}
\alias{getLogScaleTicks}
\alias{getLog1pLikeScaleTicks}
\alias{nonlinearScales}
\alias{scaleFunLog1p}
\alias{scaleFunInvLog1p}
\alias{scaleFunSqrt}
\alias{scaleFunInvSqrt}
\alias{scaleFunLogit}
\alias{scaleFunInvLogit}
\title{Nonlinear scales}
\usage{
getLogScaleTicks(x, nint = 5)

getLog1pLikeScaleTicks(
  x = NULL,
  nint = 5,
  nintSmall = nint,
  nintLarge = nint,
  smallThresh = 10
)

scaleFunLog1p(x)

scaleFunInvLog1p(x)

scaleFunSqrt(x)

scaleFunInvSqrt(x)

scaleFunLogit(x)

scaleFunInvLogit(x)
}
\arguments{
\item{x}{Data prior to scaling or inverse scaling}
}
\description{
Utility functions for scales aside from the usual from linear and log scales
}
\details{
Logit scales are useful when data is in (0, 1). Log scales are useful when
data is in (0, infty) with large outliers. Scales based on log1p (log(x+1))
can be useful when much of the data is in (-infty, infty), but with large
outliers in the positive and negative directions. For a log1p-based scale,
the scale is approximately linear near 0, and approximately log otherwise.
}
\examples{
set.seed(123)
x = matrix(rnorm(100), ncol=2)
z = sign(runif(50)-0.5) * rlnorm(50)

ticks = getLog1pLikeScaleTicks(z)
splot(x, z, colScale=redBlueDivCols, centerScale=TRUE, 
      scaleFun=scaleFunLog1p, ticks=ticks)
}
\seealso{
\code{\link{nonlinearTicks}}
}
\author{
John Paige
}
